/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}body{font-family:Lexend,sans-serif;font-size:1.6rem}h1,h2,h3{line-height:1.5;margin:0}h1{font-size:4rem}h2{font-size:3.2rem}h3{font-size:2.4rem}a{text-decoration:none}p{color:#000;font-size:2rem}.contenedor{margin:0 auto;max-width:1200px;width:95%}img{display:block;max-width:100%}ul{list-style:none;margin:0;padding:0}.seccion{padding:2rem 0}.header{background-image:url(../img/header.jpg);background-position:50%;background-repeat:no-repeat;background-size:cover;padding:3rem 0 20rem}.header__busqueda{font-weight:700;margin-top:5rem;text-align:center}@media (min-width:768px){.header__busqueda{margin-top:30rem}}.header__busqueda-boton{background-color:#fff;border-radius:3rem;color:#e8505b;display:block;font-size:2rem;font-weight:700;margin-top:1rem;padding:2rem 4rem}@media (min-width:768px){.header__busqueda-boton{display:inline-block}}.barra{display:none}@media (min-width:768px){.barra{align-items:center;display:flex;justify-content:space-between}}.barra__nav{display:flex;gap:3rem}.barra__link{color:#fff}.barra__nombre{color:#fff;margin:0}.formulario{background-color:#fff;border-radius:5rem;margin:5rem auto 2rem;padding:3rem 0}@media (min-width:1024px){.formulario{display:flex;justify-content:space-between;max-width:90rem;padding:0}}.formulario__label{font-size:1.2rem;font-weight:900}.formulario__campo{display:flex;flex-direction:column;padding:1rem 2rem}@media (min-width:1024px){.formulario__campo:first-child{padding-left:4rem}}.formulario__campo:hover{background-color:#cacaca;border-radius:5rem}.formulario__submit{background-image:radial-gradient(circle,#e24680 0,#bd1e59 100%);border:none;border-radius:2rem;color:#fff;display:block;font-size:1.2rem;font-weight:700;height:4rem;padding:0 2rem;text-transform:uppercase}.formulario__input{border:none;color:#686868;width:100%}.destinos__grid{display:grid;gap:2rem;grid-template-columns:repeat(1,1fr)}@media (min-width:768px){.destinos__grid{display:grid;gap:2rem;grid-template-columns:repeat(2,1fr)}}@media (min-width:1024px){.destinos__grid{display:grid;gap:4rem;grid-template-columns:repeat(4,1fr)}}.destinos__grid .destino{align-items:center;display:flex;gap:2rem;justify-content:space-evenly}.destinos__grid .destino p{margin:0}.lugares__grid{-moz-column-gap:4rem;column-gap:4rem;display:grid;grid-template-columns:repeat(4,30rem);overflow-x:scroll;overflow-y:hidden;scroll-snap-type:x mandatory}@media (min-width:768px){.lugares__grid{display:grid;gap:2rem;grid-template-columns:repeat(2,1fr)}}@media (min-width:1024px){.lugares__grid{display:grid;gap:2rem;grid-template-columns:repeat(4,1fr)}}.lugares__grid .lugar{scroll-snap-align:center}.lugares__grid .lugar__img{border-radius:1rem}.lugares__grid .lugar__texto{font-size:1.8rem;text-align:center}.anfitrion{background-image:linear-gradient(180deg,#000 0,#000 50%,transparent 0),url(../img/anfitrion.jpg);background-position:50%,bottom;background-repeat:no-repeat;background-size:100%,60rem;color:#fff;display:grid;grid-template-rows:repeat(2,1fr);padding:5rem;row-gap:15rem}@media (min-width:480px){.anfitrion{background-position:50%,center 200%;background-size:100%,70rem}}@media (min-width:768px){.anfitrion{background-image:linear-gradient(90deg,#000 0,#000 45%,transparent 0),url(../img/anfitrion.jpg);background-position:50%,50% 30%;background-size:100%,auto;grid-template-rows:unset;padding:15rem 5rem}}@media (min-width:1024px){.anfitrion{background-position:50%,100%}}@media (min-width:768px){.anfitrion__contenido{max-width:50%;padding:5rem}}.anfitrion__texto{color:#fff}.anfitrion__enlace{background-color:#fff;border-radius:3rem;color:#000;display:block;font-size:2rem;font-weight:700;margin-top:1rem;padding:1rem 4rem}@media (min-width:768px){.anfitrion__enlace{display:inline-block}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
